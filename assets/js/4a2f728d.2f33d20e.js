"use strict";(self.webpackChunkapp_try=self.webpackChunkapp_try||[]).push([[3749],{82128:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});const c=JSON.parse('{"id":"frontend/Vitest/expect-matcher","title":"Vitest Expect Matchers","description":"A basic guide to Vitest\'s `expect` function matchers for writing effective test assertions.","source":"@site/docs/frontend/2. Vitest/expect-matcher.mdx","sourceDirName":"frontend/2. Vitest","slug":"/frontend/vitest/expect-matcher","permalink":"/docusphere/docs/frontend/vitest/expect-matcher","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Vitest Expect Matchers","description":"A basic guide to Vitest\'s `expect` function matchers for writing effective test assertions.","slug":"/frontend/vitest/expect-matcher","authors":["tanishq"]},"sidebar":"frontend","previous":{"title":"Testing Tanstack Router","permalink":"/docusphere/docs/frontend/Vitest/testing-routes"},"next":{"title":"Spying on Functions in Vitest","permalink":"/docusphere/docs/frontend/spying-on-function-in-vitest"}}');var s=t(74848),a=t(28453);const r={title:"Vitest Expect Matchers",description:"A basic guide to Vitest's `expect` function matchers for writing effective test assertions.",slug:"/frontend/vitest/expect-matcher",authors:["tanishq"]},o="Vitest Expect Matchers",i={},l=[{value:"Equality Matchers",id:"equality-matchers",level:2},{value:"<code>toBe</code>",id:"tobe",level:3},{value:"<code>toEqual</code>",id:"toequal",level:3},{value:"<code>not.toBe</code>",id:"nottobe",level:3},{value:"<code>not.toEqual</code>",id:"nottoequal",level:3},{value:"Null and Undefined Matchers",id:"null-and-undefined-matchers",level:2},{value:"<code>toBeNull</code>",id:"tobenull",level:3},{value:"<code>toBeDefined</code>",id:"tobedefined",level:3},{value:"<code>toBeUndefined</code>",id:"tobeundefined",level:3},{value:"Truthiness Matchers",id:"truthiness-matchers",level:2},{value:"<code>toBeTruthy</code>",id:"tobetruthy",level:3},{value:"<code>toBeFalsy</code>",id:"tobefalsy",level:3},{value:"Numeric Comparisons",id:"numeric-comparisons",level:2},{value:"<code>toBeGreaterThan</code>",id:"tobegreaterthan",level:3},{value:"<code>toBeGreaterThanOrEqual</code>",id:"tobegreaterthanorequal",level:3},{value:"<code>toBeLessThan</code>",id:"tobelessthan",level:3},{value:"<code>toBeLessThanOrEqual</code>",id:"tobelessthanorequal",level:3},{value:"<code>toBeCloseTo</code>",id:"tobecloseto",level:3},{value:"String and Array Matchers",id:"string-and-array-matchers",level:2},{value:"<code>toMatch</code>",id:"tomatch",level:3},{value:"<code>toContain</code>",id:"tocontain",level:3},{value:"Exception Matchers",id:"exception-matchers",level:2},{value:"<code>toThrow</code>",id:"tothrow",level:3},{value:"Object Matchers",id:"object-matchers",level:2},{value:"<code>toHaveLength</code>",id:"tohavelength",level:3},{value:"<code>toHaveProperty</code>",id:"tohaveproperty",level:3},{value:"<code>toBeInstanceOf</code>",id:"tobeinstanceof",level:3},{value:"Mock Function Matchers",id:"mock-function-matchers",level:2},{value:"<code>toHaveBeenCalled</code>",id:"tohavebeencalled",level:3},{value:"<code>toHaveBeenCalledWith</code>",id:"tohavebeencalledwith",level:3},{value:"<code>toHaveReturnedWith</code>",id:"tohavereturnedwith",level:3},{value:"Snapshot Testing",id:"snapshot-testing",level:2},{value:"<code>toMatchSnapshot</code>",id:"tomatchsnapshot",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"vitest-expect-matchers",children:"Vitest Expect Matchers"})}),"\n",(0,s.jsxs)(n.p,{children:["Vitest provides a powerful ",(0,s.jsx)(n.code,{children:"expect"})," function that allows you to make assertions in your tests using a variety of matchers. This guide covers commonly used matchers with examples to help you write clear and effective tests."]}),"\n",(0,s.jsx)(n.h2,{id:"equality-matchers",children:"Equality Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tobe",children:(0,s.jsx)(n.code,{children:"toBe"})}),"\n",(0,s.jsx)(n.p,{children:"Checks strict equality between two values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(1 + 1).toBe(2);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"toequal",children:(0,s.jsx)(n.code,{children:"toEqual"})}),"\n",(0,s.jsx)(n.p,{children:"Checks deep equality between objects or arrays."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect([1, 2, 3]).toEqual([1, 2, 3]);\nexpect({ a: 1 }).toEqual({ a: 1 });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nottobe",children:(0,s.jsx)(n.code,{children:"not.toBe"})}),"\n",(0,s.jsx)(n.p,{children:"Ensures values are not strictly equal."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(1 + 1).not.toBe(3);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"nottoequal",children:(0,s.jsx)(n.code,{children:"not.toEqual"})}),"\n",(0,s.jsx)(n.p,{children:"Ensures deep inequality between objects or arrays."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect([1, 2, 3]).not.toEqual([3, 2, 1]);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"null-and-undefined-matchers",children:"Null and Undefined Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tobenull",children:(0,s.jsx)(n.code,{children:"toBeNull"})}),"\n",(0,s.jsxs)(n.p,{children:["Checks if a value is ",(0,s.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(null).toBeNull();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobedefined",children:(0,s.jsx)(n.code,{children:"toBeDefined"})}),"\n",(0,s.jsx)(n.p,{children:"Verifies if a value is defined."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(undefined).not.toBeDefined();\nexpect({}).toBeDefined();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobeundefined",children:(0,s.jsx)(n.code,{children:"toBeUndefined"})}),"\n",(0,s.jsxs)(n.p,{children:["Checks if a value is ",(0,s.jsx)(n.code,{children:"undefined"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(undefined).toBeUndefined();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"truthiness-matchers",children:"Truthiness Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tobetruthy",children:(0,s.jsx)(n.code,{children:"toBeTruthy"})}),"\n",(0,s.jsx)(n.p,{children:"Asserts that a value is truthy."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(true).toBeTruthy();\nexpect(1).toBeTruthy();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobefalsy",children:(0,s.jsx)(n.code,{children:"toBeFalsy"})}),"\n",(0,s.jsx)(n.p,{children:"Asserts that a value is falsy."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(false).toBeFalsy();\nexpect(0).toBeFalsy();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"numeric-comparisons",children:"Numeric Comparisons"}),"\n",(0,s.jsx)(n.h3,{id:"tobegreaterthan",children:(0,s.jsx)(n.code,{children:"toBeGreaterThan"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a value is greater than another."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(5).toBeGreaterThan(3);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobegreaterthanorequal",children:(0,s.jsx)(n.code,{children:"toBeGreaterThanOrEqual"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a value is greater than or equal to another."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(5).toBeGreaterThanOrEqual(5);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobelessthan",children:(0,s.jsx)(n.code,{children:"toBeLessThan"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a value is less than another."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(3).toBeLessThan(5);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobelessthanorequal",children:(0,s.jsx)(n.code,{children:"toBeLessThanOrEqual"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a value is less than or equal to another."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(3).toBeLessThanOrEqual(3);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobecloseto",children:(0,s.jsx)(n.code,{children:"toBeCloseTo"})}),"\n",(0,s.jsx)(n.p,{children:"Ensures floating-point numbers are close to each other."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(0.1 + 0.2).toBeCloseTo(0.3);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"string-and-array-matchers",children:"String and Array Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tomatch",children:(0,s.jsx)(n.code,{children:"toMatch"})}),"\n",(0,s.jsx)(n.p,{children:"Validates if a string matches a given regular expression."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect('hello world').toMatch(/world/);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tocontain",children:(0,s.jsx)(n.code,{children:"toContain"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if an array or string contains a specific value."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect([1, 2, 3]).toContain(2);\nexpect('hello world').toContain('world');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"exception-matchers",children:"Exception Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tothrow",children:(0,s.jsx)(n.code,{children:"toThrow"})}),"\n",(0,s.jsx)(n.p,{children:"Ensures a function throws an error."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect(() => {\n  throw new Error('error');\n}).toThrow('error');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"object-matchers",children:"Object Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tohavelength",children:(0,s.jsx)(n.code,{children:"toHaveLength"})}),"\n",(0,s.jsx)(n.p,{children:"Verifies the length of an array or string."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect([1, 2, 3]).toHaveLength(3);\nexpect('hello').toHaveLength(5);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tohaveproperty",children:(0,s.jsx)(n.code,{children:"toHaveProperty"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if an object has a specific property."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect({ a: 1 }).toHaveProperty('a');\nexpect({ a: 1 }).toHaveProperty('a', 1);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tobeinstanceof",children:(0,s.jsx)(n.code,{children:"toBeInstanceOf"})}),"\n",(0,s.jsx)(n.p,{children:"Ensures an object is an instance of a specific class."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"class MyClass {}\nconst instance = new MyClass();\nexpect(instance).toBeInstanceOf(MyClass);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"mock-function-matchers",children:"Mock Function Matchers"}),"\n",(0,s.jsx)(n.h3,{id:"tohavebeencalled",children:(0,s.jsx)(n.code,{children:"toHaveBeenCalled"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a mock function has been called."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const mockFn = vi.fn();\nmockFn();\nexpect(mockFn).toHaveBeenCalled();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tohavebeencalledwith",children:(0,s.jsx)(n.code,{children:"toHaveBeenCalledWith"})}),"\n",(0,s.jsx)(n.p,{children:"Verifies if a mock function has been called with specific arguments."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const mockFn = vi.fn();\nmockFn(1, 2);\nexpect(mockFn).toHaveBeenCalledWith(1, 2);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tohavereturnedwith",children:(0,s.jsx)(n.code,{children:"toHaveReturnedWith"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if a mock function has returned a specific value."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const mockFn = vi.fn().mockReturnValue(42);\nconst result = mockFn();\nexpect(mockFn).toHaveReturnedWith(42);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"snapshot-testing",children:"Snapshot Testing"}),"\n",(0,s.jsx)(n.h3,{id:"tomatchsnapshot",children:(0,s.jsx)(n.code,{children:"toMatchSnapshot"})}),"\n",(0,s.jsx)(n.p,{children:"Compares a value to a stored snapshot."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"expect({ a: 1 }).toMatchSnapshot();\n"})}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var c=t(96540);const s={},a=c.createContext(s);function r(e){const n=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),c.createElement(a.Provider,{value:n},e.children)}}}]);