"use strict";(self.webpackChunkapp_try=self.webpackChunkapp_try||[]).push([[8354],{57826:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"frontend/Cypress/1 general-overview","title":"General Overview","description":"What is Cypress?","source":"@site/docs/frontend/1. Cypress/1 general-overview.md","sourceDirName":"frontend/1. Cypress","slug":"/frontend/cypress","permalink":"/docs/frontend/cypress","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"General Overview","displayed-sidebar":"frontend","sidebar_position":1,"slug":"/frontend/cypress"},"sidebar":"frontend","previous":{"title":"Frontend Testing tools","permalink":"/docs/frontend"},"next":{"title":"Installation","permalink":"/docs/frontend/Cypress/2 installation"}}');var r=n(74848),i=n(28453);const o={title:"General Overview","displayed-sidebar":"frontend",sidebar_position:1,slug:"/frontend/cypress"},a="General Overview",l={},d=[{value:"What is Cypress?",id:"what-is-cypress",level:2},{value:"When Should You Use Cypress?",id:"when-should-you-use-cypress",level:2},{value:"Pros and Cons",id:"pros-and-cons",level:2},{value:"Pros:",id:"pros",level:3},{value:"Cons:",id:"cons",level:3}];function c(e){const s={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"general-overview",children:"General Overview"})}),"\n",(0,r.jsx)(s.h2,{id:"what-is-cypress",children:"What is Cypress?"}),"\n",(0,r.jsxs)(s.p,{children:["Cypress is a robust frontend testing tool tailored for ",(0,r.jsx)(s.strong,{children:"end-to-end (E2E) testing"}),", particularly effective for applications with a user interface (UI). It allows you to simulate user interactions and verify the behavior of your application in real-time, running directly in the browser and providing a live view of your tests as they execute."]}),"\n",(0,r.jsx)(s.p,{children:"With Cypress, you can:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Step into your users\u2019 shoes"})," and simulate their every click, hover, and scroll."]}),"\n",(0,r.jsxs)(s.li,{children:["Watch your app come alive as tests run in ",(0,r.jsx)(s.strong,{children:"real-time"}),", directly in your browser."]}),"\n",(0,r.jsx)(s.li,{children:"Debug with ease, thanks to features like time travel and a visual test runner that gives you x-ray vision into your application\u2019s behavior."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"when-should-you-use-cypress",children:"When Should You Use Cypress?"}),"\n",(0,r.jsx)(s.p,{children:"If your app has user interface (UI), Cypress is your go-to tool for:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Simulating Real Users"}),": Recreate what users actually do in your app\u2014log in, browse, add to cart, check out, you name it."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"E2E Testing"}),": Validate that your app flows smoothly, from login screens to checkout pages, without skipping a beat."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Automating Repetitive Tasks"}),": Let Cypress handle those repeatable actions\u2014form submissions, clicking through flows, or running the same tests over and over, so you don't have to."]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{title:"Heads Up\ud83d\udea7",type:"info",children:(0,r.jsx)(s.p,{children:"Cypress shines for E2E, but when it comes to React + Vite + TypeScript component testing, Jest and React Testing Library still take the crown."})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"pros-and-cons",children:"Pros and Cons"}),"\n",(0,r.jsx)(s.h3,{id:"pros",children:"Pros:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"User-Friendly Interface"}),": Cypress offers an intuitive and visually appealing UI, including a real-time dashboard that shows the execution of your tests."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Consistent Syntax"}),": Whether you're writing tests in TypeScript or JavaScript, the syntax remains consistent, making it easier to switch between the two."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Easy to Learn"}),": The syntax is straightforward and easy to understand, with clear and concise commands."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Excellent for E2E Testing"}),": Cypress shines in end-to-end testing, making it a powerful tool for verifying the entire application flow."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Automatic Waiting"}),": Cypress automatically waits for commands and assertions to pass before moving on to the next step, reducing flakiness in tests."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Time Travel"}),": This unique feature allows you to go back in time to see the state of your application at any point during the test, which is incredibly helpful for debugging."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Real-Time Reloads"}),": Cypress automatically reloads tests as you make changes, providing instant feedback."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Session Management"}),": Save and reuse session states to speed up your tests. This is particularly useful for login scenarios and other repetitive tasks, saving you time by avoiding repeated logins."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"cons",children:"Cons:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Component Testing"}),": While Cypress can be used for component testing, it is not its primary strength. For component testing, tools like Jest with React Testing Library are more suitable."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Setup Challenges"}),": There can be issues setting up Cypress for TypeScript files in a React + Vite project."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Browser Support"}),": Cypress primarily supports Chrome-based browsers. Other browsers like Safari and Internet Explorer are not supported."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:["For more detailed information, refer to the ",(0,r.jsx)(s.a,{href:"https://docs.cypress.io/",children:"official Cypress documentation"})]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var t=n(96540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);