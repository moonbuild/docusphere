"use strict";(self.webpackChunkapp_try=self.webpackChunkapp_try||[]).push([[2989],{95143:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"frontend/React-Testing-Library/key-imports","title":"React Component Testing - Key Imports","description":"Understanding essential imports from @testing-library/react and @testing-library/user-event for testing React components with Vitest.","source":"@site/docs/frontend/3. React-Testing-Library/key-imports.md","sourceDirName":"frontend/3. React-Testing-Library","slug":"/frontend/react-testing-library/key-imports","permalink":"/docs/frontend/react-testing-library/key-imports","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"React Component Testing - Key Imports","description":"Understanding essential imports from @testing-library/react and @testing-library/user-event for testing React components with Vitest.","displayed-sidebar":"frontend","sidebar_position":3,"slug":"/frontend/react-testing-library/key-imports","authors":["tanishq"]},"sidebar":"frontend","previous":{"title":"Why React Testing Library?","permalink":"/docs/frontend/react-testing-library/why"},"next":{"title":"Understanding the screen  Object in React Testing","permalink":"/docs/frontend/react-testing-library/screen Object"}}');var i=t(74848),r=t(28453);const o={title:"React Component Testing - Key Imports",description:"Understanding essential imports from @testing-library/react and @testing-library/user-event for testing React components with Vitest.","displayed-sidebar":"frontend",sidebar_position:3,slug:"/frontend/react-testing-library/key-imports",authors:["tanishq"]},c=void 0,l={},a=[{value:"Key Imports and Their Purpose",id:"key-imports-and-their-purpose",level:2},{value:"1. <code>render</code>",id:"1-render",level:3},{value:"2. <code>screen</code>",id:"2-screen",level:3},{value:"3. <code>waitFor</code>",id:"3-waitfor",level:3},{value:"4. <code>fireEvent</code>",id:"4-fireevent",level:3},{value:"5. <code>userEvent</code>",id:"5-userevent",level:3},{value:"Example: Testing a React Component with Vitest",id:"example-testing-a-react-component-with-vitest",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Testing React components effectively requires using the right utilities from ",(0,i.jsx)(n.code,{children:"@testing-library/react"})," and ",(0,i.jsx)(n.code,{children:"@testing-library/user-event"}),". These libraries provide powerful tools for rendering components, simulating user interactions, and making assertions about component behavior. Below, we explain key imports and their use cases in React testing with Vitest."]}),"\n",(0,i.jsx)(n.h2,{id:"key-imports-and-their-purpose",children:"Key Imports and Their Purpose"}),"\n",(0,i.jsxs)(n.h3,{id:"1-render",children:["1. ",(0,i.jsx)(n.code,{children:"render"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Renders a React component into a virtual DOM for testing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Used to mount components before making assertions."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"2-screen",children:["2. ",(0,i.jsx)(n.code,{children:"screen"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Provides methods to query elements within the rendered output."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Helps in selecting elements for assertions or interactions."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"3-waitfor",children:["3. ",(0,i.jsx)(n.code,{children:"waitFor"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Waits for an expected condition to be met within a timeout."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Useful for testing asynchronous operations like API calls or delayed UI updates."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"4-fireevent",children:["4. ",(0,i.jsx)(n.code,{children:"fireEvent"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Simulates basic user events such as clicks, input changes, and form submissions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Used to trigger events directly on DOM elements."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"5-userevent",children:["5. ",(0,i.jsx)(n.code,{children:"userEvent"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Purpose"}),": Provides a more realistic simulation of user interactions (e.g., typing, pasting, and tabbing)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Preferred over ",(0,i.jsx)(n.code,{children:"fireEvent"})," for simulating real user behavior."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-testing-a-react-component-with-vitest",children:"Example: Testing a React Component with Vitest"}),"\n",(0,i.jsx)(n.p,{children:"Below is an example of how these utilities can be used to test a simple React component:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { render, screen, waitFor, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { describe, it, expect, vi } from 'vitest';\nimport MyComponent from './MyComponent';\n\ndescribe('MyComponent', () => {\n  it('renders a button and handles click events', async () => {\n    // Render the component\n    render(<MyComponent />);\n\n    // Find the button using screen\n    const button = screen.getByRole('button', { name: /click me/i });\n\n    // Simulate a click event\n    fireEvent.click(button);\n\n    // Alternatively, use userEvent for a more realistic interaction\n    await userEvent.click(button);\n\n    // Wait for asynchronous updates\n    await waitFor(() => {\n      expect(screen.getByText('Button Clicked!')).toBeInTheDocument();\n    });\n  });\n\n  it('handles input changes', async () => {\n    // Render the component\n    render(<MyComponent />);\n\n    // Find the input field\n    const input = screen.getByLabelText(/input field/i);\n\n    // Simulate typing using userEvent\n    await userEvent.type(input, 'Hello, World!');\n\n    // Assert the input value\n    expect(input).toHaveValue('Hello, World!');\n  });\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Rendering the Component"}),": ",(0,i.jsx)(n.code,{children:"render(<MyComponent />)"})," mounts the component for testing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Querying Elements"}),": ",(0,i.jsx)(n.code,{children:"screen.getByRole"})," and ",(0,i.jsx)(n.code,{children:"screen.getByLabelText"})," help in selecting elements."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simulating Events"}),": ",(0,i.jsx)(n.code,{children:"fireEvent.click"})," and ",(0,i.jsx)(n.code,{children:"userEvent.click"})," trigger interactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Making Assertions"}),": ",(0,i.jsx)(n.code,{children:"expect"})," is used to verify component behavior."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handling Asynchronous Code"}),": ",(0,i.jsx)(n.code,{children:"waitFor"})," ensures assertions happen after state updates."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);